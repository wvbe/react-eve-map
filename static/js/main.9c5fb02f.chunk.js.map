{"version":3,"sources":["Star.js","Jump.js","compositions/OrbitControls.js","compositions/Background.js","StarMap.js","getVector3ForSolarSystem.js","App.js","index.js"],"names":["Star","_ref","security","solarSystem","onClick","securityColor","SECURITY","material","useMemo","THREE","wireframe","color","opacity","react_default","a","createElement","event","position","attach","args","jumpMaterial","Jump","start","end","geometry","vertices","push","OrbitControlsComponent","_ref$damping","damping","_ref$minAzimuthAngle","minAzimuthAngle","Infinity","_ref$maxAzimuthAngle","maxAzimuthAngle","_ref$autoRotateSpeed","autoRotateSpeed","_ref$enablePan","enablePan","_ref$enableRotate","enableRotate","_ref$enableZoom","enableZoom","_useThree","useThree","canvas","camera","controls","console","log","ThreeOrbitControls","autoRotate","useEffect","dispose","useRender","update","_ref$color","scene","gl","setPixelRatio","window","devicePixelRatio","background","Color","Tree","solarSystems","jumps","solarSystemsById","time","ret","reduce","byId","con","SOLARSYSTEMID","timeEnd","innerWidth","innerHeight","set","lookAt","dist","Background_OrbitControlsComponent","map","jump","index","key","SOLARSYSTEMNAME","cosmicMultiplier","solarSystemsWithPositions","Object","objectSpread","constellation","Vector3","X","Y","Z","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c5fb02f.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\r\nimport * as THREE from 'three';\r\n\r\nfunction getColorForSecurityStatus(security) {\r\n\tif (security < 0.05) {\r\n\t\treturn 'red';\r\n\t}\r\n\tif (security < 0.15) {\r\n\t\treturn '#b12b04';\r\n\t}\r\n\tif (security < 0.25) {\r\n\t\treturn '#c43e04';\r\n\t}\r\n\tif (security < 0.35) {\r\n\t\treturn '#c45104';\r\n\t}\r\n\tif (security < 0.45) {\r\n\t\treturn '#b16405';\r\n\t}\r\n\tif (security < 0.55) {\r\n\t\treturn '#f0f000';\r\n\t}\r\n\tif (security < 0.65) {\r\n\t\treturn '#90f030';\r\n\t}\r\n\tif (security < 0.75) {\r\n\t\treturn '#00ef00';\r\n\t}\r\n\tif (security < 0.85) {\r\n\t\treturn '#00f048';\r\n\t}\r\n\tif (security < 0.95) {\r\n\t\treturn '#47efbf';\r\n\t}\r\n\treturn '#2fefef';\r\n}\r\n\r\nexport default function Star ({\r\n\t// Required\r\n\tsolarSystem,\r\n\r\n\t// Not required\r\n\tonClick\r\n}) {\r\n\tconst securityColor = getColorForSecurityStatus(solarSystem.SECURITY);\r\n\tconst material = useMemo(() => new THREE.MeshBasicMaterial({\r\n\t\twireframe: false,\r\n\t\tcolor: securityColor,\r\n\t\topacity: 1\r\n\t}), [securityColor]);\r\n\r\n\treturn <group>\r\n\t\t<mesh\r\n\t\t\tonClick={onClick ? (event) => onClick(event, solarSystem) : null}\r\n\t\t\tposition={solarSystem.position}\r\n\t\t\tmaterial={material}\r\n\t\t>\r\n\t\t\t<boxBufferGeometry attach=\"geometry\" args={[1]} />\r\n\t\t</mesh>\r\n\t</group>\r\n}","import React from 'react';\r\nimport * as THREE from 'three';\r\n\r\nconst jumpMaterial = new THREE.LineBasicMaterial({\r\n\twireframe: true,\r\n\tcolor: '#ccc',\r\n\topacity: 1\r\n});\r\nexport default function Jump ({ start, end }) {\r\n\tconst geometry = new THREE.Geometry();\r\n\tgeometry.vertices.push(start.position);\r\n\tgeometry.vertices.push(end.position);\r\n\r\n\treturn <group><line geometry={geometry} material={ jumpMaterial } /></group>;\r\n}","import { useEffect, useMemo } from 'react';\r\nimport ThreeOrbitControls from 'three-orbitcontrols';\r\nimport {\r\n\tuseThree,\r\n\tuseRender\r\n} from 'react-three-fiber';\r\n\r\n\r\nexport default function OrbitControlsComponent ({\r\n\tdamping = 0.2,\r\n\tminAzimuthAngle = -Infinity,\r\n\tmaxAzimuthAngle = Infinity,\r\n\tautoRotateSpeed = false,\r\n\tenablePan = true,\r\n\tenableRotate = true,\r\n\tenableZoom = true\r\n}) {\r\n\tconst {\r\n\t\tcanvas,\r\n\t\tcamera\r\n\t} = useThree();\r\n\r\n\tconst controls = useMemo(() => {\r\n\t\tconsole.log('-- new ThreeOrbitControls');\r\n\t\tconst controls = new ThreeOrbitControls(camera, canvas);\r\n\t\tcontrols.damping = damping;\r\n\t\tcontrols.minAzimuthAngle = minAzimuthAngle;\r\n\t\tcontrols.maxAzimuthAngle = maxAzimuthAngle;\r\n\t\tcontrols.enablePan = enablePan;\r\n\t\tcontrols.enableRotate = enableRotate;\r\n\t\tcontrols.enableZoom = enableZoom;\r\n\r\n\t\tcontrols.autoRotate = !!autoRotateSpeed;\r\n\t\tcontrols.autoRotateSpeed = autoRotateSpeed;\r\n\t\treturn controls;\r\n\t}, [camera, canvas,\r\n\t\tdamping,\r\n\t\tminAzimuthAngle,\r\n\t\tmaxAzimuthAngle,\r\n\t\tautoRotateSpeed,\r\n\t\tenablePan,\r\n\t\tenableRotate,\r\n\t\tenableZoom]);\r\n\r\n\tuseEffect(() => {\r\n\t\t// scene.background = new Color(0x000000);\r\n\t\treturn () => {\r\n\t\t\tconsole.log('-- dispose ThreeOrbitControls');\r\n\t\t\tcontrols.dispose();\r\n\t\t}\r\n\t}, []);\r\n\r\n\tuseRender(() => {\r\n\t\tif (!controls) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!!autoRotateSpeed) {\r\n\t\t\tcontrols.update();\r\n\t\t}\r\n\t});\r\n\r\n\treturn null;\r\n}\r\n","import { useEffect } from 'react';\r\nimport {\r\n\tColor\r\n} from 'three';\r\nimport {\r\n\tuseThree,\r\n\tuseRender\r\n} from 'react-three-fiber';\r\n\r\n\r\nexport default function OrbitControlsComponent ({\r\n\tcolor = 0x000000\r\n}) {\r\n\tconst {\r\n\t\tscene,\r\n\t\tgl\r\n\t} = useThree();\r\n\r\n\tuseEffect(() => {\r\n\t\tgl.setPixelRatio(window.devicePixelRatio ? window.devicePixelRatio : 1);\r\n\t\tscene.background = new Color(color);\r\n\t}, [color]);\r\n\r\n\treturn null;\r\n}\r\n","import React, { useMemo } from 'react';\r\nimport * as THREE from 'three';\r\n\r\nimport Star from './Star';\r\nimport Jump from './Jump';\r\nimport {\r\n\tCanvas\r\n} from 'react-three-fiber';\r\n\r\nimport OrbitControls from './compositions/OrbitControls';\r\nimport Background from './compositions/Background';\r\n\r\n\r\nexport default function Tree ({\r\n\tsolarSystems,\r\n\tjumps\r\n}) {\r\n\tconst solarSystemsById = useMemo(() => {\r\n\t\tconsole.time('solarSystemsById');\r\n\t\tconst ret = solarSystems.reduce((byId, con) => {\r\n\t\t\tbyId[con.SOLARSYSTEMID] = con;\r\n\t\t\treturn byId;\r\n\t\t}, {});\r\n\t\tconsole.timeEnd('solarSystemsById');\r\n\t\treturn ret;\r\n\t}, [solarSystems]);\r\n\r\n\tconst camera = new THREE.PerspectiveCamera(\r\n\t\t70,\r\n\t\twindow.innerWidth / window.innerHeight,\r\n\t\t1,\r\n\t\t2000);\r\n\tcamera.position.set(0, 750, 0);\r\n\tcamera.lookAt(new THREE.Vector3(0, 0, 0));\r\n\treturn <Canvas camera={ camera }>\r\n\t\t<OrbitControls\r\n\t\t\tenablePan={true}\r\n\t\t\tenableRotate={true}\r\n\t\t\tenableZoom={true}\r\n\t\t\tautoRotateSpeed={ 0 }\r\n\t\t/>\r\n\t\t<Background color={0xFCFCFC} />\r\n\r\n\t\t{ jumps\r\n\t\t\t.map((jump, index) => <Jump\r\n\t\t\t\tstart={solarSystemsById[jump[0]]}\r\n\t\t\t\tend={solarSystemsById[jump[1]]}\r\n\t\t\t\tkey={index}\r\n\t\t\t/>)\r\n\t\t}\r\n\t\t{ solarSystems\r\n\t\t\t.map((solarSystem, index) => <Star\r\n\t\t\t\tkey={index}\r\n\t\t\t\tsolarSystem={solarSystem}\r\n\t\t\t\tonClick={(event, solarSystem) => {\r\n\t\t\t\t\tconsole.log('Clicked ' + solarSystem.SOLARSYSTEMNAME, solarSystem);\r\n\t\t\t\t\t// camera.position.set(solarSystem.X, solarSystem.Y, solarSystem.Z);\r\n\r\n\t\t\t\t\t// Need to get the \"controls\" const that is currently private to <OrbitControls />\r\n\t\t\t\t\t// controls.target.set(getVector3ForsolarSystem(solarSystem))\r\n\t\t\t\t}}\r\n\t\t\t/>)}\r\n\r\n\t</Canvas>;\r\n}\r\n","\r\nimport { Vector3 } from 'three';\r\n\r\nconst cosmicMultiplier = 1e-15;\r\n\r\nexport default function getVector3ForConstellation (constellation) {\r\n\treturn new Vector3(constellation.X * cosmicMultiplier, -constellation.Y * cosmicMultiplier, -constellation.Z * cosmicMultiplier)\r\n}","import React from 'react';\nimport StarMap from './StarMap';\nimport getVector3ForSolarSystem from './getVector3ForSolarSystem';\n\n\nimport { solarSystems, jumps } from './data.json';\n\nconst solarSystemsWithPositions = solarSystems.map(solarSystem => ({\n\t...solarSystem,\n\tposition: getVector3ForSolarSystem(solarSystem)\n}))\n\nexport default function App () {\n\n\n\treturn <StarMap\n\t\tsolarSystems={ solarSystemsWithPositions }\n\t\tjumps={ jumps }\n\t/>\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// import registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// registerServiceWorker();\n"],"sourceRoot":""}