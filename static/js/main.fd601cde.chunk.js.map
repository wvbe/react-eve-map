{"version":3,"sources":["Star.js","Jump.js","compositions/OrbitControls.js","compositions/Background.js","StarMap.js","getVector3ForSolarSystem.js","App.js","index.js"],"names":["Star","_ref","security","solarSystem","onClick","isInvaded","securityColor","SECURITY","material","useMemo","THREE","wireframe","color","opacity","react_default","a","createElement","event","position","attach","args","jumpMaterial","Jump","start","end","geometry","vertices","push","OrbitControlsComponent","target","_ref$damping","damping","_ref$minAzimuthAngle","minAzimuthAngle","Infinity","_ref$maxAzimuthAngle","maxAzimuthAngle","_ref$autoRotateSpeed","autoRotateSpeed","_ref$enablePan","enablePan","_ref$enableRotate","enableRotate","_ref$enableZoom","enableZoom","console","log","_useThree","useThree","canvas","camera","controls","ThreeOrbitControls","autoRotate","useEffect","dispose","update","useRender","_ref$color","scene","gl","setPixelRatio","window","devicePixelRatio","background","Color","DEFAULT_CAMERA_FOCUS","Tree","selectedSolarSystem","solarSystems","onSolarSystemClick","infestedSolarSystems","jumps","solarSystemsById","time","ret","reduce","byId","con","SOLARSYSTEMID","timeEnd","innerWidth","innerHeight","set","lookAt","solarSystemComponents","map","index","key","jumpComponents","jump","orbitControlsComponent","dist","Background_OrbitControlsComponent","cosmicMultiplier","solarSystemsWithPositions","Object","objectSpread","constellation","Vector3","X","Y","Z","ReactDOM","render","_useState","useState","_useState2","slicedToArray","selectSolarSystem","useCallback","Fragment","style","top","left","JSON","stringify","document","getElementById"],"mappings":"+LAqCe,SAASA,EAATC,GASZ,IA3CgCC,EAoClCC,EAOEF,EAPFE,YAMAC,GACEH,EAJFI,UAIEJ,EADFG,SAEME,GA5C4BJ,EA4CcC,EAAYI,UA3C7C,IACP,MAEJL,EAAW,IACP,UAEJA,EAAW,IACP,UAEJA,EAAW,IACP,UAEJA,EAAW,IACP,UAEJA,EAAW,IACP,UAEJA,EAAW,IACP,UAEJA,EAAW,IACP,UAEJA,EAAW,IACP,UAEJA,EAAW,IACP,UAED,UAcDM,EAAWC,kBAAQ,kBAAM,IAAIC,oBAAwB,CAC1DC,WAAW,EACXC,MAAON,EACPO,QAAS,KACN,CAACP,IAEL,OAAOQ,EAAAC,EAAAC,cAAA,aACNF,EAAAC,EAAAC,cAAA,QACCZ,QAASA,EAAU,SAACa,GAAD,OAAWb,EAAQa,EAAOd,IAAe,KAC5De,SAAUf,EAAYe,SACtBV,SAAUA,GAEVM,EAAAC,EAAAC,cAAA,qBAAmBG,OAAO,WAAWC,KAAM,CAAC,OCzD/C,IAAMC,EAAe,IAAIX,oBAAwB,CAChDC,WAAW,EACXC,MAAO,QACPC,QAAS,KAEK,SAASS,EAATrB,GAA+B,IAAdsB,EAActB,EAAdsB,MAAOC,EAAOvB,EAAPuB,IAChCC,EAAW,IAAIf,WAIrB,OAHAe,EAASC,SAASC,KAAKJ,EAAML,UAC7BO,EAASC,SAASC,KAAKH,EAAIN,UAEpBJ,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAAA,QAAMS,SAAUA,EAAUjB,SAAWa,iCCJrC,SAASO,EAAT3B,GASZ,IARF4B,EAQE5B,EARF4B,OAQEC,EAAA7B,EAPF8B,eAOE,IAAAD,EAPQ,GAORA,EAAAE,EAAA/B,EANFgC,uBAME,IAAAD,GANiBE,IAMjBF,EAAAG,EAAAlC,EALFmC,uBAKE,IAAAD,EALgBD,IAKhBC,EAAAE,EAAApC,EAJFqC,uBAIE,IAAAD,KAAAE,EAAAtC,EAHFuC,iBAGE,IAAAD,KAAAE,EAAAxC,EAFFyC,oBAEE,IAAAD,KAAAE,EAAA1C,EADF2C,kBACE,IAAAD,KACFE,QAAQC,IAAI,iBADV,IAAAC,EAMEC,cAFHC,EAJCF,EAIDE,OACAC,EALCH,EAKDG,OAGKC,EAAW1C,kBAAQ,WACxBoC,QAAQC,IAAI,6BACZ,IAAMK,EAAW,IAAIC,IAAmBF,EAAQD,GAchD,OAbAE,EAASpB,QAAUA,EACnBoB,EAASlB,gBAAkBA,EAC3BkB,EAASf,gBAAkBA,EAC3Be,EAASX,UAAYA,EACrBW,EAAST,aAAeA,EACxBS,EAASP,WAAaA,EAItBO,EAASE,aAAef,EACxBa,EAASb,gBAAkBA,EAE3BO,QAAQC,IAAIK,GACLA,GACL,CACFD,EACAD,EACAlB,EACAE,EACAG,EACAE,EACAE,EACAE,EACAE,IAyBD,OAvBAU,oBAAU,WAET,OAAO,WACNT,QAAQC,IAAI,iCACZK,EAASI,YAER,CAACJ,IAEAA,EAAStB,SAAWA,IACvBsB,EAAStB,OAASA,EAClBsB,EAASK,UAGVC,YAAU,WACJN,GAICb,GACLa,EAASK,WAIJ,KCnEO,SAAS5B,EAAT3B,GAEZ,IAAAyD,EAAAzD,EADFW,aACE,IAAA8C,EADM,EACNA,EAAAX,EAIEC,cAFHW,EAFCZ,EAEDY,MACAC,EAHCb,EAGDa,GAQD,OALAN,oBAAU,WACTM,EAAGC,cAAcC,OAAOC,iBAAmBD,OAAOC,iBAAmB,GACrEJ,EAAMK,WAAa,IAAIC,QAAMrD,IAC3B,CAACA,IAEG,KCbR,IAAMsD,EAAuB,IAAIxD,UAAc,EAAG,EAAG,GACtC,SAASyD,EAATlE,GAAsG,IAAtFmE,EAAsFnE,EAAtFmE,oBAAqBC,EAAiEpE,EAAjEoE,aAAoCC,GAA6BrE,EAAnDsE,qBAAmDtE,EAA7BqE,oBAAoBE,EAASvE,EAATuE,MAC3G3B,QAAQC,IAAI,kBACZ,IAAM2B,EAAmBhE,kBACxB,WACCoC,QAAQ6B,KAAK,oBACb,IAAMC,EAAMN,EAAaO,OAAO,SAACC,EAAMC,GAEtC,OADAD,EAAKC,EAAIC,eAAiBD,EACnBD,GACL,IAEH,OADAhC,QAAQmC,QAAQ,oBACTL,GAER,CAAEN,IAGGnB,EAASzC,kBAAQ,WACtBoC,QAAQC,IAAI,kBACZ,IAAMI,EAAS,IAAIxC,oBAAwB,GAAIoD,OAAOmB,WAAanB,OAAOoB,YAAa,EAAG,KAG1F,OAFAhC,EAAOhC,SAASiE,IAAI,EAAG,IAAK,GAC5BjC,EAAOkC,OAAO,IAAI1E,UAAc,EAAG,EAAG,IAC/BwC,GACL,IAEGmC,EAAwB5E,kBAC7B,WAEC,OADAoC,QAAQC,IAAI,iCACLuB,EAAaiB,IAAI,SAACnF,EAAaoF,GAAd,OACvBzE,EAAAC,EAAAC,cAAChB,EAAD,CAAMwF,IAAKD,EAAOpF,YAAaA,EAAaC,QAASkE,OAGvD,IAEKmB,EAAiBhF,kBACtB,WAEC,OADAoC,QAAQC,IAAI,0BACL0B,EAAMc,IAAI,SAACI,EAAMH,GAAP,OAChBzE,EAAAC,EAAAC,cAACM,EAAD,CAAMC,MAAOkD,EAAiBiB,EAAK,IAAKlE,IAAKiD,EAAiBiB,EAAK,IAAKF,IAAKD,OAG/E,IAGKI,EAAyB7E,EAAAC,EAAAC,cAACY,EAAD,CAC9BC,OAAQuC,EAAsBA,EAAoBlD,SAAWgD,EAC7D1B,WAAW,EACXE,cAAc,EACdE,YAAY,EACZN,gBAAiB,IAGlB,OACCxB,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAQ1C,OAAQA,GACbyC,EACF7E,EAAAC,EAAAC,cAAC6E,EAAD,CAAYjF,MAAO,WAClByE,EACAI,GC/DJ,IAAMK,EAAmB,iBCInBC,EAA4B1B,IAAaiB,IAAI,SAAAnF,GAAW,OAAA6F,OAAAC,EAAA,EAAAD,CAAA,GAC1D7F,EAD0D,CAE7De,UDJmDgF,ECIhB/F,EDH5B,IAAIgG,UAAQD,EAAcE,EAAIN,GAAmBI,EAAcG,EAAIP,GAAmBI,EAAcI,EAAIR,MADjG,IAAqCI,IECpDK,IAASC,OAAO1F,EAAAC,EAAAC,cDMD,WAAgB,IAAAyF,EACmBC,mBAAS,MAD5BC,EAAAX,OAAAY,EAAA,EAAAZ,CAAAS,EAAA,GACvBrC,EADuBuC,EAAA,GACFE,EADEF,EAAA,GAExBrC,EAAqBwC,sBAAY,SAAC7F,EAAOd,GAAR,OAAwB0G,EAAkB1G,IAAc,CAAC0G,IAChG,OAAO/F,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgG,SAAA,KACNjG,EAAAC,EAAAC,cAACmD,EAAD,CACCC,oBAAqBA,EACrBC,aAAe0B,EACfvB,MAAQA,IACRF,mBAAoBA,IAErBxD,EAAAC,EAAAC,cAAA,OAAKgG,MAAO,CAAE9F,SAAU,WAAY+F,IAAK,OAAQC,KAAM,SACpDC,KAAKC,UAAUhD,EAAqB,KAAM,SCjB/B,MAASiD,SAASC,eAAe","file":"static/js/main.fd601cde.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\r\nimport * as THREE from 'three';\r\n\r\nfunction getColorForSecurityStatus(security) {\r\n\tif (security < 0.05) {\r\n\t\treturn 'red';\r\n\t}\r\n\tif (security < 0.15) {\r\n\t\treturn '#b12b04';\r\n\t}\r\n\tif (security < 0.25) {\r\n\t\treturn '#c43e04';\r\n\t}\r\n\tif (security < 0.35) {\r\n\t\treturn '#c45104';\r\n\t}\r\n\tif (security < 0.45) {\r\n\t\treturn '#b16405';\r\n\t}\r\n\tif (security < 0.55) {\r\n\t\treturn '#f0f000';\r\n\t}\r\n\tif (security < 0.65) {\r\n\t\treturn '#90f030';\r\n\t}\r\n\tif (security < 0.75) {\r\n\t\treturn '#00ef00';\r\n\t}\r\n\tif (security < 0.85) {\r\n\t\treturn '#00f048';\r\n\t}\r\n\tif (security < 0.95) {\r\n\t\treturn '#47efbf';\r\n\t}\r\n\treturn '#2fefef';\r\n}\r\n\r\nexport default function Star ({\r\n\t// Required\r\n\tsolarSystem,\r\n\r\n\t// Not required\r\n\tisInvaded,\r\n\r\n\t// Not required\r\n\tonClick\r\n}) {\r\n\tconst securityColor = getColorForSecurityStatus(solarSystem.SECURITY);\r\n\tconst material = useMemo(() => new THREE.MeshBasicMaterial({\r\n\t\twireframe: false,\r\n\t\tcolor: securityColor,\r\n\t\topacity: 1\r\n\t}), [securityColor]);\r\n\r\n\treturn <group>\r\n\t\t<mesh\r\n\t\t\tonClick={onClick ? (event) => onClick(event, solarSystem) : null}\r\n\t\t\tposition={solarSystem.position}\r\n\t\t\tmaterial={material}\r\n\t\t>\r\n\t\t\t<boxBufferGeometry attach=\"geometry\" args={[1]} />\r\n\t\t</mesh>\r\n\t</group>\r\n}","import React from 'react';\r\nimport * as THREE from 'three';\r\n\r\nconst jumpMaterial = new THREE.LineBasicMaterial({\r\n\twireframe: true,\r\n\tcolor: 'black',\r\n\topacity: 0.1\r\n});\r\nexport default function Jump ({ start, end }) {\r\n\tconst geometry = new THREE.Geometry();\r\n\tgeometry.vertices.push(start.position);\r\n\tgeometry.vertices.push(end.position);\r\n\r\n\treturn <group><line geometry={geometry} material={ jumpMaterial } /></group>;\r\n}","import { useEffect, useMemo } from 'react';\r\nimport ThreeOrbitControls from 'three-orbitcontrols';\r\nimport {\r\n\tuseThree,\r\n\tuseRender\r\n} from 'react-three-fiber';\r\nimport { Vector3 } from 'three';\r\n\r\n\r\nexport default function OrbitControlsComponent ({\r\n\ttarget,\r\n\tdamping = 0.2,\r\n\tminAzimuthAngle = -Infinity,\r\n\tmaxAzimuthAngle = Infinity,\r\n\tautoRotateSpeed = false,\r\n\tenablePan = true,\r\n\tenableRotate = true,\r\n\tenableZoom = true\r\n}) {\r\n\tconsole.log('OrbitControls');\r\n\r\n\tconst {\r\n\t\tcanvas,\r\n\t\tcamera\r\n\t} = useThree();\r\n\r\n\tconst controls = useMemo(() => {\r\n\t\tconsole.log('-- new ThreeOrbitControls');\r\n\t\tconst controls = new ThreeOrbitControls(camera, canvas);\r\n\t\tcontrols.damping = damping;\r\n\t\tcontrols.minAzimuthAngle = minAzimuthAngle;\r\n\t\tcontrols.maxAzimuthAngle = maxAzimuthAngle;\r\n\t\tcontrols.enablePan = enablePan;\r\n\t\tcontrols.enableRotate = enableRotate;\r\n\t\tcontrols.enableZoom = enableZoom;\r\n\r\n\t\t// controls.target = new Vector3(x,y,z)\r\n\r\n\t\tcontrols.autoRotate = !!autoRotateSpeed;\r\n\t\tcontrols.autoRotateSpeed = autoRotateSpeed;\r\n\r\n\t\tconsole.log(controls);\r\n\t\treturn controls;\r\n\t}, [\r\n\t\tcamera,\r\n\t\tcanvas,\r\n\t\tdamping,\r\n\t\tminAzimuthAngle,\r\n\t\tmaxAzimuthAngle,\r\n\t\tautoRotateSpeed,\r\n\t\tenablePan,\r\n\t\tenableRotate,\r\n\t\tenableZoom]);\r\n\r\n\tuseEffect(() => {\r\n\t\t// scene.background = new Color(0x000000);\r\n\t\treturn () => {\r\n\t\t\tconsole.log('-- dispose ThreeOrbitControls');\r\n\t\t\tcontrols.dispose();\r\n\t\t}\r\n\t}, [controls]);\r\n\r\n\tif (controls.target !== target) {\r\n\t\tcontrols.target = target;\r\n\t\tcontrols.update();\r\n\t}\r\n\r\n\tuseRender(() => {\r\n\t\tif (!controls) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!!autoRotateSpeed) {\r\n\t\t\tcontrols.update();\r\n\t\t}\r\n\t});\r\n\r\n\treturn null;\r\n}\r\n","import { useEffect } from 'react';\r\nimport {\r\n\tColor\r\n} from 'three';\r\nimport {\r\n\tuseThree,\r\n\tuseRender\r\n} from 'react-three-fiber';\r\n\r\n\r\nexport default function OrbitControlsComponent ({\r\n\tcolor = 0x000000\r\n}) {\r\n\tconst {\r\n\t\tscene,\r\n\t\tgl\r\n\t} = useThree();\r\n\r\n\tuseEffect(() => {\r\n\t\tgl.setPixelRatio(window.devicePixelRatio ? window.devicePixelRatio : 1);\r\n\t\tscene.background = new Color(color);\r\n\t}, [color]);\r\n\r\n\treturn null;\r\n}\r\n","import React, { useMemo } from 'react';\r\nimport * as THREE from 'three';\r\n\r\nimport Star from './Star';\r\nimport Jump from './Jump';\r\nimport { Canvas } from 'react-three-fiber';\r\n\r\nimport OrbitControls from './compositions/OrbitControls';\r\nimport Background from './compositions/Background';\r\n\r\nconst DEFAULT_CAMERA_FOCUS = new THREE.Vector3(0, 0, 0);\r\nexport default function Tree({ selectedSolarSystem, solarSystems, infestedSolarSystems, onSolarSystemClick, jumps }) {\r\n\tconsole.log('Render StarMap');\r\n\tconst solarSystemsById = useMemo(\r\n\t\t() => {\r\n\t\t\tconsole.time('solarSystemsById');\r\n\t\t\tconst ret = solarSystems.reduce((byId, con) => {\r\n\t\t\t\tbyId[con.SOLARSYSTEMID] = con;\r\n\t\t\t\treturn byId;\r\n\t\t\t}, {});\r\n\t\t\tconsole.timeEnd('solarSystemsById');\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t[ solarSystems ]\r\n\t);\r\n\r\n\tconst camera = useMemo(() => {\r\n\t\tconsole.log('useMemo camera');\r\n\t\tconst camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 1, 2000);\r\n\t\tcamera.position.set(0, 750, 0);\r\n\t\tcamera.lookAt(new THREE.Vector3(0, 0, 0));\r\n\t\treturn camera;\r\n\t}, []);\r\n\r\n\tconst solarSystemComponents = useMemo(\r\n\t\t() => {\r\n\t\t\tconsole.log('useMemo solarSystemComponents');\r\n\t\t\treturn solarSystems.map((solarSystem, index) => (\r\n\t\t\t\t<Star key={index} solarSystem={solarSystem} onClick={onSolarSystemClick} />\r\n\t\t\t));\r\n\t\t},\r\n\t\t[]\r\n\t);\r\n\tconst jumpComponents = useMemo(\r\n\t\t() => {\r\n\t\t\tconsole.log('useMemo jumpComponents');\r\n\t\t\treturn jumps.map((jump, index) => (\r\n\t\t\t\t<Jump start={solarSystemsById[jump[0]]} end={solarSystemsById[jump[1]]} key={index} />\r\n\t\t\t));\r\n\t\t},\r\n\t\t[]\r\n\t);\r\n\r\n\tconst orbitControlsComponent = <OrbitControls\r\n\t\ttarget={selectedSolarSystem ? selectedSolarSystem.position : DEFAULT_CAMERA_FOCUS}\r\n\t\tenablePan={true}\r\n\t\tenableRotate={true}\r\n\t\tenableZoom={true}\r\n\t\tautoRotateSpeed={0}\r\n\t/>\r\n\r\n\treturn (\r\n\t\t<Canvas camera={camera}>\r\n\t\t\t{ orbitControlsComponent }\r\n\t\t\t<Background color={0xfcfcfc} />\r\n\t\t\t{solarSystemComponents}\r\n\t\t\t{jumpComponents}\r\n\t\t</Canvas>\r\n\t);\r\n}\r\n","\r\nimport { Vector3 } from 'three';\r\n\r\nconst cosmicMultiplier = 1e-15;\r\n\r\nexport default function getVector3ForConstellation (constellation) {\r\n\treturn new Vector3(constellation.X * cosmicMultiplier, -constellation.Y * cosmicMultiplier, -constellation.Z * cosmicMultiplier)\r\n}","import React, { useState, useCallback } from 'react';\r\nimport StarMap from './StarMap';\r\nimport getVector3ForSolarSystem from './getVector3ForSolarSystem';\r\n\r\n\r\nimport { solarSystems, jumps } from './data.json';\r\n\r\nconst solarSystemsWithPositions = solarSystems.map(solarSystem => ({\r\n\t...solarSystem,\r\n\tposition: getVector3ForSolarSystem(solarSystem)\r\n}))\r\n\r\nexport default function App () {\r\n\tconst [selectedSolarSystem, selectSolarSystem] = useState(null);\r\n\tconst onSolarSystemClick = useCallback((event, solarSystem) => selectSolarSystem(solarSystem), [selectSolarSystem]);\r\n\treturn <>\r\n\t\t<StarMap\r\n\t\t\tselectedSolarSystem={selectedSolarSystem}\r\n\t\t\tsolarSystems={ solarSystemsWithPositions }\r\n\t\t\tjumps={ jumps }\r\n\t\t\tonSolarSystemClick={onSolarSystemClick}\r\n\t\t/>\r\n\t\t<pre style={{ position: 'absolute', top: '30px', left: '30px' }}>\r\n\t\t\t{ JSON.stringify(selectedSolarSystem, null, '  ') }\r\n\t\t</pre>\r\n\t</>\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// import registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// registerServiceWorker();\n"],"sourceRoot":""}