{"version":3,"sources":["Star.js","Jump.js","StarMapJumps.js","compositions/OrbitControls.js","compositions/Background.js","compositions/GridHelper.js","StarMap.js","SolarSystemName.js","StarMapSearch.js","SolarSystemDetails.js","classes/SolarSystem.js","App.js","index.js"],"names":["THREE","wireframe","color","opacity","Star","_ref2","solarSystem","onClick","securityColor","getColor","material","useMemo","onMeshClick","event","stopPropagation","boxSize","RADIUS","hasIncursion","SOLARSYSTEMNAME","console","log","react_default","a","createElement","position","attach","args","jumpMaterial","jumpInterregionMaterial","Jump","_ref","start","end","geometry","vertices","push","REGIONID","StarMapJumps","solarSystemsById","jumps","map","jump","index","key","OrbitControlsComponent","target","_ref$damping","damping","_ref$minAzimuthAngle","minAzimuthAngle","Infinity","_ref$maxAzimuthAngle","maxAzimuthAngle","_ref$autoRotateSpeed","autoRotateSpeed","_ref$enablePan","enablePan","_ref$enableRotate","enableRotate","_ref$enableZoom","enableZoom","_ref$zoomSpeed","zoomSpeed","_useThree","useThree","canvas","camera","controls","ThreeOrbitControls","useEffect","dispose","autoRotate","update","useRender","_ref$color","scene","gl","setPixelRatio","window","devicePixelRatio","background","Color","GridHelperComponent","_ref$size","size","_ref$divisions","divisions","_ref$opacity","_ref$transparent","transparent","helper","GridHelper","add","remove","DEFAULT_CAMERA_FOCUS","Tree","selectedSolarSystem","solarSystems","onSolarSystemClick","children","innerWidth","innerHeight","set","lookAt","solarSystemComponents","dist","Background_OrbitControlsComponent","SolarSystemName","style","Math","round","SECURITY","filter","x","join","StarMapSearch","_useState","useState","_useState2","Object","slicedToArray","searchInput","setSearchInput","results","includes","length","onChange","value","slice","result","SOLARSYSTEMID","href","SolarSystemDetails","jumpsForSolarSystem","LUMINOSITY","SUNTYPEID","destination","find","id","cosmicMultiplier","SolarSystem","jsonData","constellation","_this","this","classCallCheck","keys","forEach","Vector3","X","Y","Z","security","solarSystemsWithPositions","reduce","byId","con","ReactDOM","render","selectSolarSystem","useCallback","Fragment","top","left","backgroundColor","document","getElementById"],"mappings":"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","file":"static/js/main.e1cf0f52.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\r\nimport * as THREE from 'three';\r\nimport { TetrahedronGeometry, Vector3 } from 'three';\r\n\r\nfunction getColorForSecurityStatus(security) {\r\n}\r\n\r\nconst jumpMaterial = new THREE.LineBasicMaterial({\r\n\twireframe: true,\r\n\tcolor: 'black',\r\n\topacity: 0.1\r\n});\r\nfunction Height ({ position }) {\r\n\tconst geometry = new THREE.Geometry();\r\n\tgeometry.vertices.push(new Vector3(0, 0, 0));\r\n\tgeometry.vertices.push(new Vector3(0, -position.y, 0));\r\n\r\n\treturn <group><line geometry={geometry} material={ jumpMaterial } /></group>;\r\n}\r\nexport default function Star ({\r\n\t// Required\r\n\tsolarSystem,\r\n\r\n\t// Not required\r\n\tonClick\r\n}) {\r\n\tconst securityColor = solarSystem.getColor();\r\n\tconst material = useMemo(() => new THREE.MeshBasicMaterial({\r\n\t\twireframe: false,\r\n\t\tcolor: securityColor,\r\n\t\topacity: 1\r\n\t}), [securityColor]);\r\n\r\n\tconst onMeshClick = onClick ? (event) => {\r\n\t\tonClick(event, solarSystem);\r\n\t\tevent.stopPropagation();\r\n\t } : null\r\n\r\n\tconst boxSize = 0.8 * solarSystem.RADIUS/1e12 + (solarSystem.hasIncursion ? 3 : 0);\r\n\r\n\tif(solarSystem.SOLARSYSTEMNAME === 'Onuse')\r\n\t\tconsole.log('Star', solarSystem, solarSystem.hasIncursion);\r\n\r\n\treturn <group\r\n\t\tposition={solarSystem.position}>\r\n\t\t<mesh\r\n\t\t\tonClick={onMeshClick}\r\n\t\t\tmaterial={material}\r\n\t\t>\r\n\t\t\t{\r\n\t\t\t\tsolarSystem.hasIncursion ?\r\n\t\t\t\t\t<tetrahedronBufferGeometry attach=\"geometry\" args={[boxSize]} /> :\r\n\t\t\t\t\t<boxBufferGeometry attach=\"geometry\" args={[boxSize, boxSize, boxSize]} />\r\n\t\t\t}\r\n\t\t\t{/* <Height position={solarSystem.position} /> */}\r\n\t\t</mesh>\r\n\t</group>\r\n}","import React from 'react';\r\nimport * as THREE from 'three';\r\n\r\nconst jumpMaterial = new THREE.LineBasicMaterial({\r\n\twireframe: true,\r\n\tcolor: 'black',\r\n\topacity: 0.3\r\n});\r\nconst jumpInterregionMaterial = new THREE.LineBasicMaterial({\r\n\twireframe: true,\r\n\tcolor: 'blue',\r\n\topacity: 0.5\r\n});\r\nexport default function Jump ({ start, end }) {\r\n\tconst geometry = new THREE.Geometry();\r\n\tgeometry.vertices.push(start.position);\r\n\tgeometry.vertices.push(end.position);\r\n\r\n\treturn <group><line geometry={geometry} material={ start.REGIONID !== end.REGIONID ? jumpInterregionMaterial : jumpMaterial } /></group>;\r\n}","import React, { useMemo } from 'react';\r\nimport * as THREE from 'three';\r\n\r\nimport Jump from './Jump';\r\n\r\nexport default function StarMapJumps({ solarSystemsById, jumps }) {\r\n\treturn useMemo(() => jumps.map((jump, index) => (\r\n\t\t\t<Jump start={solarSystemsById[jump[0]]} end={solarSystemsById[jump[1]]} key={index} />\r\n\t\t)), []);\r\n}\r\n","import { useEffect, useMemo } from 'react';\r\nimport ThreeOrbitControls from 'three-orbitcontrols';\r\nimport {\r\n\tuseThree,\r\n\tuseRender\r\n} from 'react-three-fiber';\r\n\r\n\r\nexport default function OrbitControlsComponent ({\r\n\ttarget,\r\n\tdamping = 0.2,\r\n\tminAzimuthAngle = -Infinity,\r\n\tmaxAzimuthAngle = Infinity,\r\n\tautoRotateSpeed = false,\r\n\tenablePan = true,\r\n\tenableRotate = true,\r\n\tenableZoom = true,\r\n\tzoomSpeed = 0.5\r\n}) {\r\n\tconst {\r\n\t\tcanvas,\r\n\t\tcamera\r\n\t} = useThree();\r\n\r\n\tconst controls = useMemo(() => {\r\n\t\tconst controls = new ThreeOrbitControls(camera, canvas);\r\n\r\n\t\treturn controls;\r\n\t}, [\r\n\t\tcamera,\r\n\t\tcanvas]);\r\n\r\n\tuseEffect(() => {\r\n\t\t// scene.background = new Color(0x000000);\r\n\t\treturn () => {\r\n\t\t\tcontrols.dispose();\r\n\t\t}\r\n\t}, [controls]);\r\n\r\n\tcontrols.damping = damping;\r\n\tcontrols.minAzimuthAngle = minAzimuthAngle;\r\n\tcontrols.maxAzimuthAngle = maxAzimuthAngle;\r\n\tcontrols.enablePan = enablePan;\r\n\tcontrols.enableRotate = enableRotate;\r\n\tcontrols.enableZoom = enableZoom;\r\n\tcontrols.zoomSpeed = zoomSpeed;\r\n\r\n\t// controls.target = new Vector3(x,y,z)\r\n\r\n\tcontrols.autoRotate = !!autoRotateSpeed;\r\n\tcontrols.autoRotateSpeed = autoRotateSpeed;\r\n\r\n\tif (controls.target !== target) {\r\n\t\tcontrols.target = target;\r\n\t\tcontrols.update();\r\n\t}\r\n\r\n\tuseRender(() => {\r\n\t\tif (!controls) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!!autoRotateSpeed) {\r\n\t\t\tcontrols.update();\r\n\t\t}\r\n\t});\r\n\r\n\treturn null;\r\n}\r\n","import { useEffect } from 'react';\r\nimport {\r\n\tColor\r\n} from 'three';\r\nimport {\r\n\tuseThree,\r\n\tuseRender\r\n} from 'react-three-fiber';\r\n\r\n\r\nexport default function OrbitControlsComponent ({\r\n\tcolor = 0x000000\r\n}) {\r\n\tconst {\r\n\t\tscene,\r\n\t\tgl\r\n\t} = useThree();\r\n\r\n\tuseEffect(() => {\r\n\t\tgl.setPixelRatio(window.devicePixelRatio ? window.devicePixelRatio : 1);\r\n\t\tscene.background = new Color(color);\r\n\t}, [color]);\r\n\r\n\treturn null;\r\n}\r\n","import { useEffect } from 'react';\r\n\r\nimport { useThree } from 'react-three-fiber';\r\nimport {\r\n\tGridHelper\r\n} from 'three';\r\nexport default function GridHelperComponent ({\r\n\tsize = 100,\r\n\tdivisions = 100,\r\n\topacity = 0.25,\r\n\ttransparent = true\r\n}) {\r\n\tconst { scene } = useThree();\r\n\tuseEffect(() => {\r\n\t\tvar helper = new GridHelper(size, divisions, 0x999999);\r\n\t\t// helper.position.y = - 199;\r\n\t\t// helper.position.z = - 699;\r\n\t\thelper.material.opacity = opacity;\r\n\t\thelper.material.transparent = transparent;\r\n\r\n\t\tscene.add(helper);\r\n\r\n\t\treturn () => scene.remove(helper);\r\n\t})\r\n\treturn null;\r\n}","import React, { useMemo } from 'react';\r\nimport * as THREE from 'three';\r\n\r\nimport Star from './Star';\r\nimport StarMapJumps from './StarMapJumps';\r\nimport { Canvas } from 'react-three-fiber';\r\n\r\nimport OrbitControls from './compositions/OrbitControls';\r\nimport Background from './compositions/Background';\r\nimport GridHelper from './compositions/GridHelper';\r\n\r\nconst DEFAULT_CAMERA_FOCUS = new THREE.Vector3(0, 0, 0);\r\nexport default function Tree({ selectedSolarSystem, solarSystems, solarSystemsById, jumps, onSolarSystemClick, children }) {\r\n\tconst camera = useMemo(() => {\r\n\t\tconsole.log('useMemo camera');\r\n\t\tconst camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 1, 2000);\r\n\t\tcamera.position.set(0, 750, 0);\r\n\t\tcamera.lookAt(new THREE.Vector3(0, 0, 0));\r\n\t\treturn camera;\r\n\t}, []);\r\n\r\n\tconst solarSystemComponents = useMemo(() => {\r\n\t\tconsole.log('useMemo solarSystemComponents');\r\n\t\treturn solarSystems.map((solarSystem, index) => (\r\n\t\t\t<Star key={index} solarSystem={solarSystem} onClick={onSolarSystemClick} />\r\n\t\t));\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Canvas camera={camera}>\r\n\t\t\t<GridHelper\r\n\t\t\t\tsize={1000}\r\n\t\t\t\tdivisions={50}\r\n\t\t\t\topacity={0.1}\r\n\t\t\t/>\r\n\t\t\t<OrbitControls\r\n\t\t\t\ttarget={selectedSolarSystem ? selectedSolarSystem.position : DEFAULT_CAMERA_FOCUS}\r\n\t\t\t\tenablePan={true}\r\n\t\t\t\tenableRotate={true}\r\n\t\t\t\tenableZoom={true}\r\n\t\t\t\tautoRotateSpeed={0.2}\r\n\t\t\t\tzoomSpeed={10}\r\n\t\t\t/>\r\n\t\t\t<Background color={0xfcfcfc} />\r\n\r\n\t\t\t{solarSystemComponents}\r\n\r\n\t\t\t<StarMapJumps\r\n\t\t\t\tsolarSystemsById={solarSystemsById}\r\n\t\t\t\tjumps={ jumps }\r\n\t\t\t/>\r\n\t\t</Canvas>\r\n\t);\r\n}\r\n","import React from 'react';\r\n\r\nexport default function SolarSystemName ({ solarSystem }) {\r\n\treturn <span style={{ color: solarSystem.getColor() }}>\r\n\t\t{[\r\n\t\t\tsolarSystem.hasIncursion ? '⚠️ ' : '',\r\n\t\t\tsolarSystem.SOLARSYSTEMNAME,\r\n\t\t\t'(' + Math.round(10 * solarSystem.SECURITY) / 10 + ')'\r\n\t\t].filter(x => !!x).join(' ')}\r\n\t</span>;\r\n}","import React, { useState } from 'react';\r\nimport SolarSystemName from './SolarSystemName';\r\n\r\nexport default function StarMapSearch({ selectedSolarSystem, solarSystems, onSolarSystemClick }) {\r\n\tconst [ searchInput, setSearchInput ] = useState('');\r\n\r\n\tconst results = searchInput\r\n\t\t? solarSystems.filter((solarSystem) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\ttypeof solarSystem.SOLARSYSTEMNAME === 'string' && solarSystem.SOLARSYSTEMNAME.includes(searchInput)\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t: [];\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>STARMAP SEARCH ({results.length})</h1>\r\n\t\t\t<input onChange={(event) => setSearchInput(event.target.value)} value={searchInput} />\r\n\t\t\t<ul>\r\n\t\t\t\t{results.slice(0, 50).map((result) => (\r\n\t\t\t\t\t<li key={result.SOLARSYSTEMID}>\r\n\t\t\t\t\t\t<a href=\"#\" onClick={() => onSolarSystemClick(null, result)}>\r\n\t\t\t\t\t\t\t<SolarSystemName solarSystem={result} />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useMemo } from 'react';\r\nimport SolarSystemName from './SolarSystemName';\r\n\r\nexport default function SolarSystemDetails({ solarSystem, jumps, solarSystemsById, onSolarSystemClick }) {\r\n\tconst jumpsForSolarSystem = useMemo(\r\n\t\t() => (solarSystem ? jumps.filter((jump) => jump.includes(solarSystem.SOLARSYSTEMID)) : []),\r\n\t\t[ solarSystem ]\r\n\t);\r\n\r\n\tif (!solarSystem) {\r\n\t\treturn <p>No solar system selected</p>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>\r\n\t\t\t\t<SolarSystemName solarSystem={solarSystem} />\r\n\t\t\t</h1>\r\n\r\n\t\t\t{solarSystem.hasIncursion && (\r\n\t\t\t\t<p style={{color: 'red'}}>\r\n\t\t\t\t\t<b>Incursion in this system</b>\r\n\t\t\t\t</p>\r\n\t\t\t)}\r\n\t\t\t<table>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>ID</th>\r\n\t\t\t\t\t\t<td>{solarSystem.SOLARSYSTEMID}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Security</th>\r\n\t\t\t\t\t\t<td>{solarSystem.SECURITY}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Luminosity</th>\r\n\t\t\t\t\t\t<td>{solarSystem.LUMINOSITY}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Sun type</th>\r\n\t\t\t\t\t\t<td>{solarSystem.SUNTYPEID}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Gates</th>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t{jumpsForSolarSystem.map((jump) => {\r\n\t\t\t\t\t\t\t\t\tconst destination =\r\n\t\t\t\t\t\t\t\t\t\tsolarSystemsById[jump.find((id) => id !== solarSystem.SOLARSYSTEMID)];\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<li key={destination.SOLARSYSTEMID}>\r\n\t\t\t\t\t\t\t\t\t\t\t<a href='#' onClick={() => onSolarSystemClick(null, destination)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SolarSystemName solarSystem={destination} />\r\n\t\t\t\t\t\t\t\t\t\t\t</a>;\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n}\r\n","\r\nimport { Vector3 } from 'three';\r\n\r\nconst cosmicMultiplier = 1e-15;\r\n\r\nexport function getVector3 (constellation) {\r\n\treturn new Vector3(constellation.X * cosmicMultiplier, -constellation.Y * cosmicMultiplier, -constellation.Z * cosmicMultiplier)\r\n}\r\n\r\nexport default class SolarSystem {\r\n\tconstructor (jsonData) {\r\n\t\tObject.keys(jsonData).forEach(key => this[key] = jsonData[key]);\r\n\r\n\t\tthis.position = getVector3(jsonData);\r\n\t}\r\n\r\n\tgetColor () {\r\n\t\tif (this.hasIncursion) {\r\n\t\t\treturn 'blue';\r\n\t\t}\r\n\t\tconst security = this.SECURITY;\r\n\t\tif (security < 0.05) {\r\n\t\t\treturn 'red';\r\n\t\t}\r\n\t\tif (security < 0.15) {\r\n\t\t\treturn '#b12b04';\r\n\t\t}\r\n\t\tif (security < 0.25) {\r\n\t\t\treturn '#c43e04';\r\n\t\t}\r\n\t\tif (security < 0.35) {\r\n\t\t\treturn '#c45104';\r\n\t\t}\r\n\t\tif (security < 0.45) {\r\n\t\t\treturn '#b16405';\r\n\t\t}\r\n\t\tif (security < 0.55) {\r\n\t\t\treturn '#f0f000';\r\n\t\t}\r\n\t\tif (security < 0.65) {\r\n\t\t\treturn '#90f030';\r\n\t\t}\r\n\t\tif (security < 0.75) {\r\n\t\t\treturn '#00ef00';\r\n\t\t}\r\n\t\tif (security < 0.85) {\r\n\t\t\treturn '#00f048';\r\n\t\t}\r\n\t\tif (security < 0.95) {\r\n\t\t\treturn '#47efbf';\r\n\t\t}\r\n\t\treturn '#2fefef';\r\n\t}\r\n}","import React, { useState, useCallback } from 'react';\r\nimport StarMap from './StarMap';\r\nimport StarMapSearch from './StarMapSearch';\r\nimport SolarSystemDetails from './SolarSystemDetails';\r\n\r\nimport { solarSystems, jumps } from './data.json';\r\nimport SolarSystem from './classes/SolarSystem';\r\n\r\nconst solarSystemsWithPositions = solarSystems.map(solarSystem => new SolarSystem(solarSystem))\r\n\r\nconst solarSystemsById = solarSystemsWithPositions.reduce((byId, con) => {\r\n\tbyId[con.SOLARSYSTEMID] = con;\r\n\treturn byId;\r\n}, {});\r\n\r\nexport default function App () {\r\n\tconst [selectedSolarSystem, selectSolarSystem] = useState(null);\r\n\tconst onSolarSystemClick = useCallback((event, solarSystem) => selectSolarSystem(solarSystem), [selectSolarSystem]);\r\n\treturn <>\r\n\t\t<StarMap\r\n\t\t\tselectedSolarSystem={selectedSolarSystem}\r\n\t\t\tsolarSystems={ solarSystemsWithPositions }\r\n\t\t\tsolarSystemsById={solarSystemsById}\r\n\t\t\tjumps={ jumps }\r\n\t\t\tonSolarSystemClick={onSolarSystemClick}\r\n\t\t/>\r\n\t\t<div style={{ position: 'absolute', top: '30px', left: '30px', backgroundColor: 'rgba(255,255,255, 0.8)' }}>\r\n\t\t\t<StarMapSearch\r\n\t\t\t\tselectedSolarSystem={selectedSolarSystem}\r\n\t\t\t\tsolarSystems={solarSystemsWithPositions}\r\n\t\t\t\tonSolarSystemClick={onSolarSystemClick}\r\n\t\t\t/>\r\n\t\t\t<SolarSystemDetails\r\n\t\t\t\tsolarSystem={selectedSolarSystem}\r\n\t\t\t\tsolarSystemsById={solarSystemsById}\r\n\t\t\t\tjumps={ jumps }\r\n\t\t\t\tonSolarSystemClick={onSolarSystemClick}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t</>\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// import registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// registerServiceWorker();\n"],"sourceRoot":""}